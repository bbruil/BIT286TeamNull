@model TeamNullGame.ViewModels.LoginViewModel
<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Login Page</title>
    <!--link for the bootstraps-->
    <link rel="stylesheet" href="~/Content/bootstrap.css" />
    <!-- Test -->
    <link href="~/Content/pushy-buttons.min.css" rel="stylesheet" type="text/css">

    <!--font-->
    <link href="https://fonts.googleapis.com/css?family=Lato|Nunito|Barrio" rel="stylesheet" />

    <style type="text/css">
        body {
            background-image: url('../../Images/chalkboard.jpg');
            background-repeat: no-repeat;
            background-position: center;
            background-size: cover;
        }

        h2 {
            text-align: center;
            font-family: Barrio;
            font-weight: 900;
        }

        .jumbotron {
            margin: auto;
            width: 70%;
            padding: 30px;
            background-color: transparent;
            line-height: 2.1428571435;
            color: inherit;
            background-repeat: no-repeat;
            background-position: center;
            background-size: auto;
        }
    </style>
</head>
<body>




    @{
        ViewBag.Title = "Login";
    }

    <div class="jumbotron">
        <h2>Welcome, Teacher!</h2>
        <h2>Login please, using your Email and Password.</h2>

        <section id="loginForm">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.ValidationMessageFor(model => model.Error, "")
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            @*<input type="submit" value="Login" class="btn btn-default" />*@
                            <button class="btn btn--lg btn--blue" type="submit" value="Login" href="#">Login</button>
                        </div>
                    </div>
                </div>
            }
        </section>
        </div>
</body>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
</html>
